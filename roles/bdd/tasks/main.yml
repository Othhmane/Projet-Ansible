- name: Installer PostgreSQL
  ansible.builtin.package:
    name: postgresql
    state: present

- name: S'assurer que psycopg2 est installé
  ansible.builtin.package:
    name: python3-psycopg2
    state: present
  become: yes 

- name: S'assurer que le service PostgreSQL est en cours d'exécution
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes
  become: yes

- name: Remplacer 127.0.0.1/32 par 0.0.0.0/0 dans pg_hba.conf
  ansible.builtin.lineinfile:
    path: /etc/postgresql/15/main/pg_hba.conf
    regexp: '^host\s+all\s+all\s+127\.0\.0\.1\/32'
    line: 'host    all             all             0.0.0.0/0                 trust'
    state: present
  notify: Redémarrer PostgreSQL
  become: yes

- name: Remplacer peer par trust pour l'utilisateur postgres
  ansible.builtin.lineinfile:
    path: /etc/postgresql/15/main/pg_hba.conf
    regexp: '^local\s+all\s+postgres\s+peer'
    line: 'local   all             postgres                                trust'
    state: present
  notify: Redémarrer PostgreSQL
  become: yes

- name: Ajouter une authentification trust pour tous les utilisateurs localement
  ansible.builtin.lineinfile:
    path: /etc/postgresql/15/main/pg_hba.conf
    regexp: '^local\s+all\s+all\s+peer'
    line: 'local   all             all                                     trust'
    state: present
  notify: Redémarrer PostgreSQL
  become: yes

- name: Créer des bases de données manuellement si elles n'existent pas
  ansible.builtin.shell:
    cmd: "psql -tc \"SELECT 1 FROM pg_database WHERE datname='{{ item }}'\" | grep -q 1 || createdb {{ item }}"
  loop:
    - all
    - dev
    - stage
    - prod
  become: yes
  become_user: postgres

- name: Créer l'utilisateur vagrant avec tous les privilèges sur toutes les bases de données si non existant
  ansible.builtin.shell:
   cmd: psql -tc "SELECT 1 FROM pg_roles WHERE rolname='vagrant'" | grep -q 1 || psql -c "CREATE USER vagrant WITH SUPERUSER;"
  become: yes
  become_user: postgres

- name: Accorder des privilèges à vagrant pour la base de données all
  ansible.builtin.shell:
   cmd: "psql -c \"GRANT ALL PRIVILEGES ON DATABASE \\\"all\\\" TO vagrant;\""
  become: yes
  become_user: postgres

- name: Assigner vagrant comme proprietaire des bases de données dev, stage et prod
  ansible.builtin.shell:
    cmd: "psql -c \"ALTER DATABASE {{ item }} OWNER TO vagrant;\""
  loop:
    - dev
    - stage
    - prod
  become: yes
  become_user: postgres
